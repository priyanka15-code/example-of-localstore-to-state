{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nexport class AuthEffects {\n  /*  saveToken$ = createEffect(\n     () =>\n       this.actions$.pipe(\n         ofType(login),\n         tap(action => {\n           localStorage.setItem('authToken', action.token);\n         })\n       ),\n     { dispatch: false }\n   );\n       clearToken$ = createEffect(\n     () =>\n       this.actions$.pipe(\n         ofType(logout),\n         tap(() => {\n           localStorage.removeItem('authToken');\n         })\n       ),\n     { dispatch: false }\n   );\n  */\n  constructor(actions$) {\n    this.actions$ = actions$;\n  }\n  static #_ = this.ɵfac = function AuthEffects_Factory(t) {\n    return new (t || AuthEffects)(i0.ɵɵinject(i1.Actions));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthEffects,\n    factory: AuthEffects.ɵfac\n  });\n}","map":{"version":3,"names":["AuthEffects","constructor","actions$","_","i0","ɵɵinject","i1","Actions","_2","factory","ɵfac"],"sources":["/home/devmonk--/example/Frontend/src/app/state/state.effect.ts"],"sourcesContent":["// auth.effects.ts\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { tap } from 'rxjs/operators';\nimport { login, logout } from './state.action';\n\n@Injectable()\nexport class AuthEffects {\n /*  saveToken$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(login),\n        tap(action => {\n          localStorage.setItem('authToken', action.token);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  clearToken$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(logout),\n        tap(() => {\n          localStorage.removeItem('authToken');\n        })\n      ),\n    { dispatch: false }\n  );\n*/\n  constructor(private actions$: Actions) {}\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EACvB;;;;;;;;;;;;;;;;;;;;;EAsBCC,YAAoBC,QAAiB;IAAjB,KAAAA,QAAQ,GAARA,QAAQ;EAAY;EAAC,QAAAC,CAAA,G;qBAvB9BH,WAAW,EAAAI,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXR,WAAW;IAAAS,OAAA,EAAXT,WAAW,CAAAU;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}